{"version":3,"file":"static/js/921.0a931621.chunk.js","mappings":"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","sources":["components/sortTable/SortTable.js","components/tableHeader/TableHeader.js","assets/images/lens.svg","components/searchField/SearchField.js","components/employeeTable/EmployeeTable.js"],"sourcesContent":["export const descendingComparator = (a, b, orderBy) => {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n  \r\n  export const getComparator = (order, orderBy) => {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  };","import { visuallyHidden } from '@mui/utils';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Box from '@mui/material/Box';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead  from '@mui/material/TableHead';\r\n\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'firstName',\r\n    label: 'First Name',\r\n  },\r\n  {\r\n    id: 'lastName',\r\n    label: 'Last Name',\r\n  },\r\n  {\r\n    id: 'birthdate',\r\n    label: 'Date of Birth',\r\n  },\r\n  {\r\n    id: 'department',\r\n    label: 'Department',\r\n  },\r\n  {\r\n    id: 'startDate',\r\n    label: 'Start Date',\r\n  },\r\n  {\r\n    id: 'street',\r\n    label: 'Street',\r\n  },\r\n  {\r\n    id: 'city',\r\n    label: 'City',\r\n  },\r\n  {\r\n    id: 'state',\r\n    label: 'State',\r\n  },\r\n  {\r\n    id: 'zipCode',\r\n    label: 'zipCode',\r\n  },\r\n];\r\n\r\n/**\r\n * Render Table Header\r\n * @param {object} props\r\n * @returns\r\n */\r\nexport default function TableHeader(props ){\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n\r\n    <TableHead>\r\n   \r\n      <TableRow>\r\n        {headCells.map(headCell => (\r\n         \r\n          <TableCell\r\n            key={headCell.id}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n           style={{background: 'rgba(212, 212, 248, 0.20)', color:'rgb(68, 68, 146) '}}>\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}>\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n      \r\n    </TableHead>\r\n    \r\n  );\r\n};\r\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLens(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#38393b\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0V0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLens);\nexport default __webpack_public_path__ + \"static/media/lens.d5a90ae7b94c4c6cea11a84271a47a4d.svg\";\nexport { ForwardRef as ReactComponent };","import { InputField } from '../form/inputField/InputField';\r\nimport search from '../../assets/images/lens.svg';\r\nimport './SearchField.css'\r\n\r\n/**\r\n * Renders the table search bar\r\n * @param {function} requestSearch\r\n * @returns {JSX}\r\n */\r\n  export default function SearchBar  ({ requestSearch })  {\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    requestSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onChange={handleInputChange} className='search'>\r\n    <InputField\r\n        input='search'\r\n        type='search'\r\n        placeholder='search' \r\n        \r\n        />\r\n      <img src={search} alt=\"search\" />\r\n    </form>\r\n  );\r\n};","import{ useState, useContext} from 'react';\r\nimport { getComparator } from '../sortTable/SortTable';\r\nimport TableHeader from '../tableHeader/TableHeader';\r\nimport  SearchBar  from '../searchField/SearchField'\r\n\r\nimport { EmployeeContext } from '../../context/employeeContext';\r\n\r\n\r\n//material ui\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\n\r\nconst dayjs = require('dayjs');\r\n\r\n/**\r\n * Render Employee Table\r\n * Component that uses material ui\r\n * @returns {JSX}\r\n */\r\nexport default function EmployeeTable  () {\r\n   const {employees} = useContext(EmployeeContext);\r\n\r\n  \r\n   const originalEmployeesRows = employees.map(employee => {\r\n    return {\r\n      firstName: employee.name,\r\n      lastName: employee.lastName,\r\n      birthdate: employee.birthdate,\r\n      department: employee.department,\r\n      startdate: employee.startdate,\r\n      street: employee.street,\r\n      city: employee.city,\r\n      state: employee.state,\r\n      zipCode: employee.zipCode,\r\n    };\r\n  });\r\n\r\n\r\n  const [rows, setRows] = useState(originalEmployeesRows);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('firstName');\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  \r\n\r\n  /**\r\n   * Sort the list in ascending or descending order according to a property\r\n   * (by default sort in ascending order of first names)\r\n   * @param {object} event\r\n   * @param {string} property\r\n   */\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  /**\r\n   * Change the table page\r\n   * @param {object} event\r\n   * @param {number} newPage\r\n   */\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  \r\n  //  Change the number of rows to display in the table\r\n   \r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n /**\r\n   * Filters the display of the list of employees in the table\r\n   * when a new value is entered in the search bar\r\n   * @param {string} searchedVal\r\n   */\r\n  const requestSearch = searchedVal => {\r\n    const filteredRows = originalEmployeesRows.filter(row => {\r\n      return [\r\n        row.firstName,\r\n        row.lastName,\r\n        row.department,\r\n        row.street,\r\n        row.city,\r\n        row.state,\r\n        row.zipCode,\r\n      ].some(text => {\r\n        const [formattedText, formattedSearch] = [text.trim().toLowerCase(),  searchedVal.trim().toLowerCase() ];\r\n\r\n        return formattedText.includes(formattedSearch);\r\n      });\r\n    });\r\n    setRows(filteredRows);\r\n  };\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <>\r\n      <SearchBar requestSearch={requestSearch}  />\r\n      <TableContainer>\r\n        <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\">\r\n        \r\n          <TableHeader\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={rows.length}\r\n          />\r\n          \r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .sort(getComparator(order, orderBy))\r\n              .map((row, index) => {\r\n                return (\r\n                  <TableRow hover tabIndex={-1} key={index}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.firstName}\r\n                    </TableCell>\r\n                    <TableCell>{row.lastName}</TableCell>\r\n                    <TableCell>\r\n                      {dayjs(row.birthdate).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n                    <TableCell>{row.department}</TableCell>\r\n                    <TableCell>\r\n                      {dayjs(row.startdate).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n                    <TableCell>{row.street}</TableCell>\r\n                    <TableCell>{row.city}</TableCell>\r\n                    <TableCell>{row.state}</TableCell>\r\n                    <TableCell>{row.zipCode}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            {emptyRows > 0 && (\r\n              <TableRow>\r\n                <TableCell colSpan={9} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        style={{ marginBottom: '36px' }}\r\n      />\r\n    </>\r\n  );\r\n};"],"names":["descendingComparator","a","b","orderBy","getComparator","order","headCells","id","label","TableHeader","props","onRequestSort","TableHead","TableRow","map","headCell","TableCell","sortDirection","style","background","color","TableSortLabel","active","direction","onClick","property","event","Box","component","sx","visuallyHidden","SearchBar","requestSearch","onChange","e","target","value","className","InputField","input","type","placeholder","src","search","alt","dayjs","require","EmployeeTable","originalEmployeesRows","useContext","EmployeeContext","employees","employee","firstName","name","lastName","birthdate","department","startdate","street","city","state","zipCode","useState","rows","setRows","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","max","length","searchedVal","filteredRows","filter","row","some","text","trim","toLowerCase","formattedSearch","includes","TableContainer","Table","minWidth","rowCount","TableBody","slice","sort","index","hover","tabIndex","scope","format","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","marginBottom"],"sourceRoot":""}